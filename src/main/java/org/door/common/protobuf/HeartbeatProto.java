// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: heartbeat.proto

package org.door.common.protobuf;

public final class HeartbeatProto {
  private HeartbeatProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code door.ConnectionStatus}
   */
  public enum ConnectionStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DISCONNECTED = 0;</code>
     */
    DISCONNECTED(0),
    /**
     * <code>CONNECTED = 1;</code>
     */
    CONNECTED(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DISCONNECTED = 0;</code>
     */
    public static final int DISCONNECTED_VALUE = 0;
    /**
     * <code>CONNECTED = 1;</code>
     */
    public static final int CONNECTED_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConnectionStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ConnectionStatus forNumber(int value) {
      switch (value) {
        case 0: return DISCONNECTED;
        case 1: return CONNECTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConnectionStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConnectionStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConnectionStatus>() {
            public ConnectionStatus findValueByNumber(int number) {
              return ConnectionStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.door.common.protobuf.HeartbeatProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final ConnectionStatus[] VALUES = values();

    public static ConnectionStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ConnectionStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:door.ConnectionStatus)
  }

  public interface HeartbeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:door.Heartbeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 timestamp = 1;</code>
     * @return The timestamp.
     */
    long getTimestamp();

    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    int getConnectionsCount();
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    boolean containsConnections(
        java.lang.String key);
    /**
     * Use {@link #getConnectionsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus>
    getConnections();
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus>
    getConnectionsMap();
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    org.door.common.protobuf.HeartbeatProto.ConnectionStatus getConnectionsOrDefault(
        java.lang.String key,
        org.door.common.protobuf.HeartbeatProto.ConnectionStatus defaultValue);
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    org.door.common.protobuf.HeartbeatProto.ConnectionStatus getConnectionsOrThrow(
        java.lang.String key);
    /**
     * Use {@link #getConnectionsValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getConnectionsValue();
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getConnectionsValueMap();
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */

    int getConnectionsValueOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */

    int getConnectionsValueOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code door.Heartbeat}
   */
  public static final class Heartbeat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:door.Heartbeat)
      HeartbeatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Heartbeat.newBuilder() to construct.
    private Heartbeat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Heartbeat() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Heartbeat();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Heartbeat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              timestamp_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                connections_ = com.google.protobuf.MapField.newMapField(
                    ConnectionsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              connections__ = input.readMessage(
                  ConnectionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              connections_.getMutableMap().put(
                  connections__.getKey(), connections__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.door.common.protobuf.HeartbeatProto.internal_static_door_Heartbeat_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetConnections();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.door.common.protobuf.HeartbeatProto.internal_static_door_Heartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.door.common.protobuf.HeartbeatProto.Heartbeat.class, org.door.common.protobuf.HeartbeatProto.Heartbeat.Builder.class);
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>int64 timestamp = 1;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int CONNECTIONS_FIELD_NUMBER = 2;
    private static final class ConnectionsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  org.door.common.protobuf.HeartbeatProto.internal_static_door_Heartbeat_ConnectionsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  org.door.common.protobuf.HeartbeatProto.ConnectionStatus.DISCONNECTED.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> connections_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetConnections() {
      if (connections_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ConnectionsDefaultEntryHolder.defaultEntry);
      }
      return connections_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, org.door.common.protobuf.HeartbeatProto.ConnectionStatus> connectionsValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                org.door.common.protobuf.HeartbeatProto.ConnectionStatus.internalGetValueMap(),
                org.door.common.protobuf.HeartbeatProto.ConnectionStatus.UNRECOGNIZED);
    private static final java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus>
    internalGetAdaptedConnectionsMap(
        java.util.Map<java.lang.String, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus, java.lang.Integer>(
              map, connectionsValueConverter);
    }

    public int getConnectionsCount() {
      return internalGetConnections().getMap().size();
    }
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */

    @java.lang.Override
    public boolean containsConnections(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetConnections().getMap().containsKey(key);
    }
    /**
     * Use {@link #getConnectionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus>
    getConnections() {
      return getConnectionsMap();
    }
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus>
    getConnectionsMap() {
      return internalGetAdaptedConnectionsMap(
          internalGetConnections().getMap());}
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    @java.lang.Override

    public org.door.common.protobuf.HeartbeatProto.ConnectionStatus getConnectionsOrDefault(
        java.lang.String key,
        org.door.common.protobuf.HeartbeatProto.ConnectionStatus defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConnections().getMap();
      return map.containsKey(key)
             ? connectionsValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    @java.lang.Override

    public org.door.common.protobuf.HeartbeatProto.ConnectionStatus getConnectionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConnections().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return connectionsValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getConnectionsValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getConnectionsValue() {
      return getConnectionsValueMap();
    }
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer>
    getConnectionsValueMap() {
      return internalGetConnections().getMap();
    }
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    @java.lang.Override

    public int getConnectionsValueOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConnections().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
     */
    @java.lang.Override

    public int getConnectionsValueOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetConnections().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestamp_ != 0L) {
        output.writeInt64(1, timestamp_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetConnections(),
          ConnectionsDefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestamp_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetConnections().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        connections__ = ConnectionsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, connections__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.door.common.protobuf.HeartbeatProto.Heartbeat)) {
        return super.equals(obj);
      }
      org.door.common.protobuf.HeartbeatProto.Heartbeat other = (org.door.common.protobuf.HeartbeatProto.Heartbeat) obj;

      if (getTimestamp()
          != other.getTimestamp()) return false;
      if (!internalGetConnections().equals(
          other.internalGetConnections())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      if (!internalGetConnections().getMap().isEmpty()) {
        hash = (37 * hash) + CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetConnections().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.door.common.protobuf.HeartbeatProto.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.door.common.protobuf.HeartbeatProto.Heartbeat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code door.Heartbeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:door.Heartbeat)
        org.door.common.protobuf.HeartbeatProto.HeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.door.common.protobuf.HeartbeatProto.internal_static_door_Heartbeat_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetConnections();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableConnections();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.door.common.protobuf.HeartbeatProto.internal_static_door_Heartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.door.common.protobuf.HeartbeatProto.Heartbeat.class, org.door.common.protobuf.HeartbeatProto.Heartbeat.Builder.class);
      }

      // Construct using org.door.common.protobuf.HeartbeatProto.Heartbeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestamp_ = 0L;

        internalGetMutableConnections().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.door.common.protobuf.HeartbeatProto.internal_static_door_Heartbeat_descriptor;
      }

      @java.lang.Override
      public org.door.common.protobuf.HeartbeatProto.Heartbeat getDefaultInstanceForType() {
        return org.door.common.protobuf.HeartbeatProto.Heartbeat.getDefaultInstance();
      }

      @java.lang.Override
      public org.door.common.protobuf.HeartbeatProto.Heartbeat build() {
        org.door.common.protobuf.HeartbeatProto.Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.door.common.protobuf.HeartbeatProto.Heartbeat buildPartial() {
        org.door.common.protobuf.HeartbeatProto.Heartbeat result = new org.door.common.protobuf.HeartbeatProto.Heartbeat(this);
        int from_bitField0_ = bitField0_;
        result.timestamp_ = timestamp_;
        result.connections_ = internalGetConnections();
        result.connections_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.door.common.protobuf.HeartbeatProto.Heartbeat) {
          return mergeFrom((org.door.common.protobuf.HeartbeatProto.Heartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.door.common.protobuf.HeartbeatProto.Heartbeat other) {
        if (other == org.door.common.protobuf.HeartbeatProto.Heartbeat.getDefaultInstance()) return this;
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        internalGetMutableConnections().mergeFrom(
            other.internalGetConnections());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.door.common.protobuf.HeartbeatProto.Heartbeat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.door.common.protobuf.HeartbeatProto.Heartbeat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long timestamp_ ;
      /**
       * <code>int64 timestamp = 1;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {
        
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 timestamp = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> connections_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetConnections() {
        if (connections_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ConnectionsDefaultEntryHolder.defaultEntry);
        }
        return connections_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableConnections() {
        onChanged();;
        if (connections_ == null) {
          connections_ = com.google.protobuf.MapField.newMapField(
              ConnectionsDefaultEntryHolder.defaultEntry);
        }
        if (!connections_.isMutable()) {
          connections_ = connections_.copy();
        }
        return connections_;
      }

      public int getConnectionsCount() {
        return internalGetConnections().getMap().size();
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */

      @java.lang.Override
      public boolean containsConnections(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetConnections().getMap().containsKey(key);
      }
      /**
       * Use {@link #getConnectionsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus>
      getConnections() {
        return getConnectionsMap();
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus>
      getConnectionsMap() {
        return internalGetAdaptedConnectionsMap(
            internalGetConnections().getMap());}
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      @java.lang.Override

      public org.door.common.protobuf.HeartbeatProto.ConnectionStatus getConnectionsOrDefault(
          java.lang.String key,
          org.door.common.protobuf.HeartbeatProto.ConnectionStatus defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConnections().getMap();
        return map.containsKey(key)
               ? connectionsValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      @java.lang.Override

      public org.door.common.protobuf.HeartbeatProto.ConnectionStatus getConnectionsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConnections().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return connectionsValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getConnectionsValueMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getConnectionsValue() {
        return getConnectionsValueMap();
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.Integer>
      getConnectionsValueMap() {
        return internalGetConnections().getMap();
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      @java.lang.Override

      public int getConnectionsValueOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConnections().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      @java.lang.Override

      public int getConnectionsValueOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetConnections().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearConnections() {
        internalGetMutableConnections().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */

      public Builder removeConnections(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableConnections().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus>
      getMutableConnections() {
        return internalGetAdaptedConnectionsMap(
             internalGetMutableConnections().getMutableMap());
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      public Builder putConnections(
          java.lang.String key,
          org.door.common.protobuf.HeartbeatProto.ConnectionStatus value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableConnections().getMutableMap()
            .put(key, connectionsValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      public Builder putAllConnections(
          java.util.Map<java.lang.String, org.door.common.protobuf.HeartbeatProto.ConnectionStatus> values) {
        internalGetAdaptedConnectionsMap(
            internalGetMutableConnections().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableConnectionsValue() {
        return internalGetMutableConnections().getMutableMap();
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      public Builder putConnectionsValue(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableConnections().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .door.ConnectionStatus&gt; connections = 2;</code>
       */
      public Builder putAllConnectionsValue(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableConnections().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:door.Heartbeat)
    }

    // @@protoc_insertion_point(class_scope:door.Heartbeat)
    private static final org.door.common.protobuf.HeartbeatProto.Heartbeat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.door.common.protobuf.HeartbeatProto.Heartbeat();
    }

    public static org.door.common.protobuf.HeartbeatProto.Heartbeat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Heartbeat>
        PARSER = new com.google.protobuf.AbstractParser<Heartbeat>() {
      @java.lang.Override
      public Heartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Heartbeat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Heartbeat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Heartbeat> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.door.common.protobuf.HeartbeatProto.Heartbeat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_door_Heartbeat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_door_Heartbeat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_door_Heartbeat_ConnectionsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_door_Heartbeat_ConnectionsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017heartbeat.proto\022\004door\"\241\001\n\tHeartbeat\022\021\n" +
      "\ttimestamp\030\001 \001(\003\0225\n\013connections\030\002 \003(\0132 ." +
      "door.Heartbeat.ConnectionsEntry\032J\n\020Conne" +
      "ctionsEntry\022\013\n\003key\030\001 \001(\t\022%\n\005value\030\002 \001(\0162" +
      "\026.door.ConnectionStatus:\0028\001*3\n\020Connectio" +
      "nStatus\022\020\n\014DISCONNECTED\020\000\022\r\n\tCONNECTED\020\001" +
      "B;\n\030org.door.common.protobufB\016HeartbeatP" +
      "roto\252\002\016HeartbeatProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_door_Heartbeat_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_door_Heartbeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_door_Heartbeat_descriptor,
        new java.lang.String[] { "Timestamp", "Connections", });
    internal_static_door_Heartbeat_ConnectionsEntry_descriptor =
      internal_static_door_Heartbeat_descriptor.getNestedTypes().get(0);
    internal_static_door_Heartbeat_ConnectionsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_door_Heartbeat_ConnectionsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
